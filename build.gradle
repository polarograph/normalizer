plugins {
	id 'fabric-loom' version "1.10-SNAPSHOT"
	id 'maven-publish'
}

def is1216 = project.hasProperty("mc_target") && project.mc_target == "1.21.6"

ext {
	minecraft_version = is1216 ? "1.21.6" : "1.21.5"
	yarn_mappings = is1216 ? "1.21.6+build.1" : "1.21.5+build.1"
	loader_version = is1216 ? "0.16.14" : "0.16.13"
	fabric_version = is1216 ? "0.127.1+1.21.6" : "0.121.0+1.21.5"

	target_version = is1216 ? "1.21.6" : "1.21.4-1.21.5"
}

// version print
println "==> Building for Minecraft ${minecraft_version} " +
		"with mappings ${yarn_mappings} " +
		"and Fabric Loader ${loader_version}"

version = project.mod_version
group   = project.maven_group

base {
	archivesName = "${project.archives_base_name}-${target_version}"
}

repositories {
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft     "com.mojang:minecraft:${minecraft_version}"
	mappings       loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:17.0.144") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi "com.terraformersmc:modmenu:13.0.2"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

task preprocessJava(type: Copy) {
	from 'src/main/java'
	into "$buildDir/preprocessedSrc"
	include '**/*.java'
	filter { String line ->
		if (is1216) {
			return line.replace(
					'getCurrentVersion().getName()',
					'getCurrentVersion().name()'
			)
		} else {
			return line
		}
	}
}

compileJava {
	dependsOn preprocessJava
	source = fileTree("$buildDir/preprocessedSrc") { include '**/*.java' }
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}